{"version":3,"sources":["fill_extrusion_layer.ts"],"names":["PaintProperties","data","color","property","fillExtrusionColor","opacity","fillExtrusionOpacity","fillExtrusionTranslate","fillExtrusionTranslateAnchor","fillExtrusionPattern","height","fillExtrusionHeight","base","fillExtrusionBase","Serializable","LayoutProperties","visibility","FillExtrusionLayer","paint","layout","BaseLayer"],"mappings":"k4BAAA,iE,stBAEaA,CAAAA,e,wHAUX,yBAAYC,IAAZ,CAAuB,8DACrB,wBADqB,qtBAErB,GAAMC,CAAAA,KAAK,CAAGD,IAAI,CAAC,sBAAD,CAAJ,EAAgCA,IAAI,CAAC,sBAAD,CAAJ,CAA6BE,QAA7D,CAAwE,CAAE,KAAF,CAASF,IAAI,CAAC,sBAAD,CAAJ,CAA6BE,QAAtC,CAAxE,CAA2HF,IAAI,CAAC,sBAAD,CAA7I,CACA,MAAKG,kBAAL,CAA0BH,IAAI,CAAC,sBAAD,CAAJ,CAA+BC,KAA/B,CAAuC,SAAjE,CACA,GAAMG,CAAAA,OAAO,CAAGJ,IAAI,CAAC,wBAAD,CAAJ,EAAkCA,IAAI,CAAC,wBAAD,CAAJ,CAA+BE,QAAjE,CAA6E,CAAE,KAAF,CAASF,IAAI,CAAC,wBAAD,CAAJ,CAA+BE,QAAxC,CAA7E,CAAkIF,IAAI,CAAC,wBAAD,CAAtJ,CACA,MAAKK,oBAAL,CAA4BD,OAAO,EAAI,CAAvC,CACA,MAAKE,sBAAL,CAA8BN,IAAI,CAAC,0BAAD,CAAJ,EAAoC,CAAC,CAAD,CAAI,CAAJ,CAAlE,CACA,MAAKO,4BAAL,CAAoCP,IAAI,CAAC,iCAAD,CAAJ,EAA2C,KAA/E,CACA,MAAKQ,oBAAL,CAA4BR,IAAI,CAAC,wBAAD,CAAhC,CACA,GAAMS,CAAAA,MAAM,CAAGT,IAAI,CAAC,uBAAD,CAAJ,EAAiCA,IAAI,CAAC,uBAAD,CAAJ,CAA8BE,QAA/D,CAA0E,CAAE,KAAF,CAASF,IAAI,CAAC,uBAAD,CAAJ,CAA8BE,QAAvC,CAA1E,CAA8HF,IAAI,CAAC,uBAAD,CAAjJ,CACA,MAAKU,mBAAL,CAA2BD,MAAM,EAAI,CAArC,CACA,GAAME,CAAAA,IAAI,CAAGX,IAAI,CAAC,qBAAD,CAAJ,EAA+BA,IAAI,CAAC,qBAAD,CAAJ,CAA4BE,QAA3D,CAAsE,CAAE,KAAF,CAASF,IAAI,CAAC,qBAAD,CAAJ,CAA4BE,QAArC,CAAtE,CAAwHF,IAAI,CAAC,qBAAD,CAAzI,CACA,MAAKY,iBAAL,CAAyBD,IAAI,EAAI,CAAjC,CAZqB,aAatB,C,yBAvBkCE,wB,6CA0BxBC,CAAAA,gB,6HAGX,0BAAYd,IAAZ,CAAuB,gEACrB,0BADqB,8FAErB,OAAKe,UAAL,CAAkBf,IAAI,CAACe,UAAL,EAAmB,SAArC,CAFqB,cAGtB,C,0BANmCF,wB,+CASjBG,CAAAA,kB,yHAInB,4BAAYhB,IAAZ,CAAuB,kEACrB,yBAAMA,IAAN,EADqB,mLAErB,OAAKiB,KAAL,CAAa,GAAIlB,CAAAA,eAAJ,CAAoBC,IAAI,CAACiB,KAAL,EAAc,EAAlC,CAAb,CACA,OAAKC,MAAL,CAAc,GAAIJ,CAAAA,gBAAJ,CAAqBd,IAAI,CAACkB,MAAL,EAAe,EAApC,CAAd,CAHqB,cAItB,C,4BAR6CC,mB","sourcesContent":["import BaseLayer, { Serializable } from './base_layer'\n\nexport class PaintProperties extends Serializable {\n  fillExtrusionColor: string | string[]\n  fillExtrusionOpacity: number\n  fillExtrusionTranslate: [number, number]\n  fillExtrusionTranslateAnchor: 'map' | 'viewport'\n  fillExtrusionPattern?: 'string'\n  fillExtrusionHeight: number\n  fillExtrusionBase: number\n  // fillExtrusionVerticalGradient: boolean\n\n  constructor(data: any) {\n    super()\n    const color = data['fill-extrusion-color'] && data['fill-extrusion-color'].property ? [ 'get', data['fill-extrusion-color'].property ] : data['fill-extrusion-color']\n    this.fillExtrusionColor = data['fill-extrusion-color'] ? color : '#000000'\n    const opacity = data['fill-extrusion-opacity'] && data['fill-extrusion-opacity'].property  ? [ 'get', data['fill-extrusion-opacity'].property ] : data['fill-extrusion-opacity']\n    this.fillExtrusionOpacity = opacity || 1\n    this.fillExtrusionTranslate = data['fill-extrusion-translate'] || [0, 0]\n    this.fillExtrusionTranslateAnchor = data['fill-extrusion-translate-anchor'] || 'map'\n    this.fillExtrusionPattern = data['fill-extrusion-pattern']\n    const height = data['fill-extrusion-height'] && data['fill-extrusion-height'].property ? [ 'get', data['fill-extrusion-height'].property ] : data['fill-extrusion-height']\n    this.fillExtrusionHeight = height || 0\n    const base = data['fill-extrusion-base'] && data['fill-extrusion-base'].property ? [ 'get', data['fill-extrusion-base'].property ] : data['fill-extrusion-base']\n    this.fillExtrusionBase = base || 0\n  }\n}\n\nexport class LayoutProperties extends Serializable {\n  visibility: 'visible' | 'none'\n\n  constructor(data: any) {\n    super()\n    this.visibility = data.visibility || 'visible'\n  }\n}\n\nexport default class FillExtrusionLayer extends BaseLayer {\n  paint: PaintProperties\n  layout: LayoutProperties\n\n  constructor(data: any) {\n    super(data)\n    this.paint = new PaintProperties(data.paint || {})\n    this.layout = new LayoutProperties(data.layout || {})\n  }\n}\n"]}