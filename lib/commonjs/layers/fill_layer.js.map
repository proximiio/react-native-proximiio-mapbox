{"version":3,"sources":["fill_layer.ts"],"names":["PaintProperties","data","fillAntialias","fillOpacity","isIOS","fillColor","property","fillOutlineColor","fillTranslate","fillTranslateAnchor","fillPattern","Serializable","LayoutProperties","visibility","FillLayer","paint","layout","BaseLayer"],"mappings":"q4BAAA,iEACA,mC,qtDAEaA,CAAAA,e,wHASX,yBAAYC,IAAZ,CAAuB,8DACrB,wBADqB,iqBAErB,MAAKC,aAAL,CAAqBD,IAAI,CAAC,gBAAD,CAAJ,EAA0B,IAA/C,CACA,MAAKE,WAAL,CAAmBF,IAAI,CAAC,cAAD,CAAJ,EAAwB,CAA3C,CAEA,GAAIG,cAAJ,CAAW,CACT,MAAKC,SAAL,CAAiBJ,IAAI,CAAC,YAAD,CAAJ,CAAqB,CAAC,UAAD,CAAaA,IAAI,CAAC,YAAD,CAAjB,CAAiC,SAAjC,CAArB,CAAmE,SAApF,CACD,CAFD,IAEO,CACL,GAAIA,IAAI,CAAC,YAAD,CAAJ,EAAsBA,IAAI,CAAC,YAAD,CAAJ,CAAmBK,QAA7C,CAAuD,CACrD,MAAKD,SAAL,CAAiB,CAAC,UAAD,CAAa,CAAC,KAAD,CAAQJ,IAAI,CAAC,YAAD,CAAJ,CAAmBK,QAA3B,CAAb,CAAjB,CACD,CAFD,IAEO,CACL,MAAKD,SAAL,CAAiBJ,IAAI,CAAC,YAAD,CAArB,CACD,CACF,CACD,GAAIA,IAAI,CAAC,oBAAD,CAAR,CAAgC,CAC9B,MAAKM,gBAAL,CAAwB,CAAC,UAAD,CAAaN,IAAI,CAAC,oBAAD,CAAjB,CAAyC,SAAzC,CAAxB,CACD,CACD,MAAKO,aAAL,CAAqBP,IAAI,CAAC,gBAAD,CAAJ,EAA0B,CAAC,CAAD,CAAI,CAAJ,CAA/C,CACA,MAAKQ,mBAAL,CAA2BR,IAAI,CAAC,uBAAD,CAAJ,EAAiC,KAA5D,CAEA,GAAIA,IAAI,CAAC,cAAD,CAAR,CAA0B,CACxB,GAAI,MAAOA,CAAAA,IAAI,CAAC,cAAD,CAAX,GAAgC,QAApC,CAA8C,CAC5C,MAAKS,WAAL,CAAmB,CAAC,SAAD,CAAYT,IAAI,CAAC,cAAD,CAAhB,CAAnB,CACD,CACD,GAAIA,IAAI,CAAC,cAAD,CAAJ,CAAqBK,QAAzB,CAAmC,CACjC,MAAKI,WAAL,CAAmB,CAAC,KAAD,CAAQT,IAAI,CAAC,cAAD,CAAJ,CAAqBK,QAA7B,CAAnB,CACD,CACF,CA3BoB,aA4BtB,C,mDArCkCK,wB,6CAwCxBC,CAAAA,gB,6HAIX,0BAAYX,IAAZ,CAAuB,gEACrB,0BADqB,6LAGrB,OAAKY,UAAL,CAAkBZ,IAAI,CAACY,UAAL,EAAmB,SAArC,CAHqB,cAItB,C,oDARmCF,wB,+CAWjBG,CAAAA,S,uGAInB,mBAAYb,IAAZ,CAAuB,yDACrB,yBAAMA,IAAN,EADqB,mLAErB,OAAKc,KAAL,CAAa,GAAIf,CAAAA,eAAJ,CAAoBC,IAAI,CAACc,KAAL,EAAc,EAAlC,CAAb,CACA,OAAKC,MAAL,CAAc,GAAIJ,CAAAA,gBAAJ,CAAqBX,IAAI,CAACe,MAAL,EAAe,EAApC,CAAd,CAHqB,cAItB,C,6CARoCC,mB","sourcesContent":["import BaseLayer, { Serializable } from './base_layer'\nimport { isIOS } from '../helpers'\n\nexport class PaintProperties extends Serializable {\n  fillAntialias: boolean\n  fillOpacity: number\n  fillColor: string | string[]\n  fillOutlineColor?: string | string[]\n  fillTranslate: [number, number]\n  fillTranslateAnchor: 'map' | 'viewport'\n  fillPattern?: string | string[]\n\n  constructor(data: any) {\n    super()\n    this.fillAntialias = data['fill-antialias'] || true\n    this.fillOpacity = data['fill-opacity'] || 1\n    // this.fillColor = data['fill-color'] || ['to-color', '#0080c0']\n    if (isIOS) {\n      this.fillColor = data['fill-color'] ? ['to-color', data['fill-color'], '#0080c0'] : '#0080c0'\n    } else {\n      if (data['fill-color'] && data['fill-color'].property) {\n        this.fillColor = ['to-color', ['get', data['fill-color'].property] as unknown as string]\n      } else {\n        this.fillColor = data['fill-color']\n      }\n    }\n    if (data['fill-outline-color']) {\n      this.fillOutlineColor = ['to-color', data['fill-outline-color'], '#0080c0']\n    }\n    this.fillTranslate = data['fill-translate'] || [0, 0]\n    this.fillTranslateAnchor = data['fill-translate-anchor'] || 'map'\n\n    if (data['fill-pattern']) {\n      if (typeof data['fill-pattern'] === 'string') {\n        this.fillPattern = ['literal', data['fill-pattern']]\n      }\n      if (data['fill-pattern'].property) {\n        this.fillPattern = ['get', data['fill-pattern'].property]\n      }\n    }\n  }\n}\n\nexport class LayoutProperties extends Serializable {\n  fillSortKey?: number\n  visibility: 'visible' | 'none'\n\n  constructor(data: any) {\n    super()\n    // this.fillSortKey = data['fill-sort-key']\n    this.visibility = data.visibility || 'visible'\n  }\n}\n\nexport default class FillLayer extends BaseLayer {\n  paint: PaintProperties\n  layout: LayoutProperties\n\n  constructor(data: any) {\n    super(data)\n    this.paint = new PaintProperties(data.paint || {})\n    this.layout = new LayoutProperties(data.layout || {})\n  }\n}\n"]}