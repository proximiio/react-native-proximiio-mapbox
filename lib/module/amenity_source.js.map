{"version":3,"sources":["amenity_source.tsx"],"names":["AmenitySource","props","syncKey","Date","getTime","images","onChange","bind","amenities","ProximiioMapbox","getAmenities","console","log","length","bluedot","uri","blueDot","scale","filter","a","icon","forEach","amenity","id","setState","subscribe","ProximiioMapboxEvents","AMENITIES_CHANGED","unsubscribe","_nextProps","nextState","state","React","Component"],"mappings":"i/BAAA,oDACA,0EACA,6DACA,kCACA,qE,0zBAaaA,CAAAA,a,0HAMX,uBAAYC,KAAZ,CAA0B,4DACxB,uBAAMA,KAAN,EADwB,gFALlB,CACNC,OAAO,oCAA8B,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAA9B,CADD,CAENC,MAAM,CAAE,EAFF,CAKkB,EAExB,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcC,IAAd,4CAAhB,CAFwB,aAGzB,C,2NAGOC,S,CAAYC,kBAAgBC,YAAhB,E,CAClBC,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAA+CJ,SAAS,CAACK,MAAzD,EACMR,M,CAAS,CACbS,OAAO,CAAE,CAAEC,GAAG,CAAEC,gBAAP,CAAgBC,KAAK,CAAE,CAAvB,CADI,C,CAGfT,SAAS,CACNU,MADH,CACU,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAUD,CAAC,CAACC,IAAF,CAAOP,MAAP,CAAgB,GAA9B,EADX,EAEGQ,OAFH,CAEW,SAAAC,OAAO,QAAMjB,CAAAA,MAAM,CAACiB,OAAO,CAACC,EAAT,CAAN,CAAqB,CAAER,GAAG,CAAEO,OAAO,CAACF,IAAf,CAAqBH,KAAK,CAAE,CAA5B,CAA3B,EAFlB,EAGA,KAAKO,QAAL,CAAc,CAAEnB,MAAM,CAANA,MAAF,CAAUH,OAAO,oCAA8B,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAA9B,CAAjB,CAAd,E,kIAGkB,CAClB,KAAKE,QAAL,GACAG,kBAAgBgB,SAAhB,CACEC,gCAAsBC,iBADxB,CAEE,KAAKrB,QAFP,EAID,C,mEAEsB,CACrBG,kBAAgBmB,WAAhB,CACEF,gCAAsBC,iBADxB,CAEE,KAAKrB,QAFP,EAID,C,oEAEqBuB,U,CAAmBC,S,CAAkB,CACzD,GAAI,oBAAMA,SAAN,CAAiB,KAAKC,KAAtB,CAAJ,CAAkC,CAChC,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,C,uCAEQ,CACP,MACE,8BAAC,aAAD,CAAU,MAAV,EACE,GAAG,CAAE,KAAKA,KAAL,CAAW7B,OADlB,CAEE,MAAM,CAAE,KAAK6B,KAAL,CAAW1B,MAFrB,4EADF,CAMD,C,2BApDgC2B,eAAMC,S","sourcesContent":["import React from 'react';\nimport MapboxGL from '@react-native-mapbox-gl/maps';\nimport ProximiioMapbox, { Amenity, ProximiioMapboxEvents } from './instance';\nimport { blueDot } from './helpers';\nimport equal from 'fast-deep-equal/react';\n\nexport type URIImages = {\n  [id: string]: { uri: string, scale: number };\n};\n\ninterface Props {}\n\ninterface State {\n  syncKey: string;\n  images: URIImages;\n}\n\nexport class AmenitySource extends React.Component<Props, State> {\n  state = {\n    syncKey: `proximiio-amenity-source-${new Date().getTime()}`,\n    images: {} as URIImages,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  async onChange() {\n    const amenities = ProximiioMapbox.getAmenities();\n    console.log('amenity source onChange, size: ', amenities.length);\n    const images = {\n      bluedot: { uri: blueDot, scale: 1 }\n    } as URIImages;\n    amenities\n      .filter(a => a.icon && a.icon.length > 256 )\n      .forEach(amenity => ( images[amenity.id] = { uri: amenity.icon, scale: 1 }));\n    this.setState({ images, syncKey: `proximiio-amenity-source-${new Date().getTime()}` });\n  }\n\n  componentDidMount() {\n    this.onChange();\n    ProximiioMapbox.subscribe(\n      ProximiioMapboxEvents.AMENITIES_CHANGED,\n      this.onChange\n    );\n  }\n\n  componentWillUnmount() {\n    ProximiioMapbox.unsubscribe(\n      ProximiioMapboxEvents.AMENITIES_CHANGED,\n      this.onChange\n    );\n  }\n\n  shouldComponentUpdate(_nextProps: Props, nextState: State) {\n    if (equal(nextState, this.state)) {\n      return false\n    }\n    return true\n  }\n\n  render() {\n    return (\n      <MapboxGL.Images\n        key={this.state.syncKey}\n        images={this.state.images}\n      />\n    );\n  }\n}\n"]}