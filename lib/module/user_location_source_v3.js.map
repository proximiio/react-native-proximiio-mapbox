{"version":3,"sources":["user_location_source_v3.tsx"],"names":["UserLocationSource","undefined","location","Proximiio","heading","setState","forceUpdate","ProximiioMapbox","subscribe","ProximiioMapboxEvents","STYLE_CHANGED","onChange","FEATURES_CHANGED","LOCATION_UPDATED","onLocationUpdated","CompassHeading","start","accuracy","props","onAccuracyChanged","unsubscribe","stop","visible","state","styles","getDefaultStyle","outerRing","markerOuterRingStyle","middleRing","markerMiddleRingStyle","innerRing","markerInnerRingStyle","headingStyle","lng","lat","createIcon","showHeadingIndicator","React","Component","showsUserHeadingIndicator","Constants","LAYER_USER_MARKER_CONE","LAYER_POLYGONS_ABOVE_PATHS","LAYER_USER_MARKER_1","LAYER_USER_MARKER_2","LAYER_USER_MARKER_3","proximiBlue","getHeadingIndicatorStyle","circleRadius","circleColor","circleOpacity","circlePitchAlignment","iconRotation","iconImage","coneImage","iconSize","iconAllowOverlap","iconRotate"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MapboxGL, {\n  CircleLayerStyle,\n  SymbolLayerStyle\n} from '@react-native-mapbox-gl/maps';\nimport ProximiioMapbox from 'react-native-proximiio-mapbox';\nimport Proximiio, {ProximiioLocation} from 'react-native-proximiio';\nimport CompassHeading from 'react-native-compass-heading';\nimport coneImage from './assets/cone.png';\nimport Annotation from '@react-native-mapbox-gl/maps/javascript/components/annotations/Annotation';\nimport {ProximiioMapboxEvents} from './instance';\nimport Constants from './constants';\n\ninterface Props {\n  onAccuracyChanged: (accuracy: number) => void;\n  showHeadingIndicator?: boolean;\n  visible?: boolean;\n  markerOuterRingStyle?: CircleLayerStyle\n  markerMiddleRingStyle?: CircleLayerStyle\n  markerInnerRingStyle?: CircleLayerStyle\n  headingStyle?: SymbolLayerStyle\n}\ninterface State {\n  heading?: number;\n  location?: ProximiioLocation;\n}\n\nexport class UserLocationSource extends React.Component<Props, State> {\n  private accuracy = undefined;\n  state = {\n    location: Proximiio.location,\n    heading: 0,\n  } as State;\n\n  componentDidMount() {\n    ProximiioMapbox.subscribe(ProximiioMapboxEvents.STYLE_CHANGED, this.onChange);\n    ProximiioMapbox.subscribe(ProximiioMapboxEvents.FEATURES_CHANGED, this.onChange);\n    ProximiioMapbox.subscribe(ProximiioMapboxEvents.LOCATION_UPDATED, this.onLocationUpdated);\n    CompassHeading.start(2, ({heading, accuracy}) => {\n      this.setState({heading: heading});\n      if (this.accuracy !== accuracy && this.props.onAccuracyChanged) {\n        this.accuracy = accuracy;\n        this.props.onAccuracyChanged(accuracy);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    ProximiioMapbox.unsubscribe(ProximiioMapboxEvents.STYLE_CHANGED, this.onChange);\n    ProximiioMapbox.unsubscribe(ProximiioMapboxEvents.FEATURES_CHANGED, this.onChange);\n    ProximiioMapbox.unsubscribe(ProximiioMapboxEvents.LOCATION_UPDATED, this.onLocationUpdated);\n    CompassHeading.stop();\n  }\n\n  render() {\n    if (!this.props.visible || !this.state.location) {\n      return null;\n    }\n\n    let styles = getDefaultStyle(this.state.heading || 0);\n    styles.outerRing = {...styles.outerRing, ...this.props.markerOuterRingStyle};\n    styles.middleRing = {...styles.middleRing, ...this.props.markerMiddleRingStyle};\n    styles.innerRing = {...styles.innerRing, ...this.props.markerInnerRingStyle};\n    styles.heading = {...styles.heading, ...this.props.headingStyle};\n\n    return (\n      <Annotation\n        id=\"proximiUserLocation\"\n        animated={true}\n        key={'proximiioUserAnnotation'}\n        coordinates={this.state.location ? [this.state.location.lng, this.state.location.lat] : null}>\n        {createIcon(this.props.showHeadingIndicator, styles)}\n      </Annotation>\n    );\n  }\n\n  private onLocationUpdated = (location: ProximiioLocation) => {\n    this.setState({location: location});\n  };\n\n  private onChange = () => {\n    this.forceUpdate();\n  };\n}\n\nexport const createIcon = (showsUserHeadingIndicator?: boolean, styles: Styles) => [\n  (showsUserHeadingIndicator ?\n    <MapboxGL.SymbolLayer\n      key={Constants.LAYER_USER_MARKER_CONE}\n      id={Constants.LAYER_USER_MARKER_CONE}\n      aboveLayerID={Constants.LAYER_POLYGONS_ABOVE_PATHS}\n      style={styles.heading}\n    /> : []),\n  <MapboxGL.CircleLayer\n    key={Constants.LAYER_USER_MARKER_1}\n    id={Constants.LAYER_USER_MARKER_1}\n    aboveLayerID={Constants.LAYER_USER_MARKER_CONE}\n    style={styles.outerRing}\n  />,\n  <MapboxGL.CircleLayer\n    key={Constants.LAYER_USER_MARKER_2}\n    id={Constants.LAYER_USER_MARKER_2}\n    aboveLayerID={Constants.LAYER_USER_MARKER_1}\n    style={styles.middleRing}\n  />,\n  <MapboxGL.CircleLayer\n    key={Constants.LAYER_USER_MARKER_3}\n    id={Constants.LAYER_USER_MARKER_3}\n    aboveLayerID={Constants.LAYER_USER_MARKER_2}\n    style={styles.innerRing}\n  />,\n];\n\nconst proximiBlue = 'rgb(59,143,214)';\n\n\ninterface Styles {\n  heading: SymbolLayerStyle;\n  outerRing: CircleLayerStyle;\n  middleRing: CircleLayerStyle;\n  innerRing: CircleLayerStyle;\n}\n\nconst getDefaultStyle = (heading: number): Styles => {\n  return {\n    heading: getHeadingIndicatorStyle(heading),\n    outerRing: {\n      circleRadius: 25,\n      circleColor: proximiBlue,\n      circleOpacity: 0.2,\n      circlePitchAlignment: 'map',\n    },\n    middleRing: {\n      circleRadius: 15,\n      circleColor: '#fff',\n      circlePitchAlignment: 'map',\n    },\n    innerRing: {\n      circleRadius: 10,\n      circleColor: proximiBlue,\n      circlePitchAlignment: 'map',\n    }\n  };\n};\n\nconst getHeadingIndicatorStyle = (iconRotation?: number) => {\n  return {\n    iconImage: coneImage,\n    iconSize: 2.4,\n    iconAllowOverlap: true,\n    iconRotate: iconRotation,\n  };\n};\n"]}