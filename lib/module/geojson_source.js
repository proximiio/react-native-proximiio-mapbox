var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.GeoJSONSource=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _assertThisInitialized2=_interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _react=_interopRequireDefault(require("react"));var _maps=_interopRequireDefault(require("@react-native-mapbox-gl/maps"));var _layer_mapper=_interopRequireDefault(require("./layer_mapper"));var _instance=_interopRequireWildcard(require("./instance"));var _feature=require("./feature");var _jsxFileName="/Users/wired/mika/react-native-proximiio-mapbox/src/geojson_source.tsx";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var GeoJSONSource=function(_React$Component){(0,_inherits2.default)(GeoJSONSource,_React$Component);var _super=_createSuper(GeoJSONSource);function GeoJSONSource(){var _this;(0,_classCallCheck2.default)(this,GeoJSONSource);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),"state",{collection:{type:'FeatureCollection',features:[]},syncKey:0});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),"getLayers",function(){var layers=(0,_layer_mapper.default)(_instance.default.style,'main',_this.props.level);if(Array.isArray(_this.props.ignoreLayers)){layers.forEach(function(layer){if(layer.props.id&&_this.props.ignoreLayers.includes(layer.props.id)){var style=layer.props.style;style.visibility='none';}});}return layers;});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),"onChange",function(){return _this.tryFeatures();});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),"onPress",function(evt){if(!_this.props.onPress){return;}var featureIds=evt.features.map(function(it){return it.id;});var pressedFeatures=_this.state.collection.features.filter(function(it){return featureIds.includes(it.id);});_this.props.onPress(pressedFeatures);});return _this;}(0,_createClass2.default)(GeoJSONSource,[{key:"componentDidMount",value:function componentDidMount(){this.tryFeatures();_instance.default.subscribe(_instance.ProximiioMapboxEvents.FEATURES_CHANGED,this.onChange);}},{key:"componentWillUnmount",value:function componentWillUnmount(){_instance.default.unsubscribe(_instance.ProximiioMapboxEvents.FEATURES_CHANGED,this.onChange);}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(nextProps,nextState,_){return this.props.level!==nextProps.level||this.props.filter!==nextProps.filter||this.state.syncKey!==nextState.syncKey;}},{key:"tryFeatures",value:function tryFeatures(){var _features,features;return _regenerator.default.async(function tryFeatures$(_context){while(1){switch(_context.prev=_context.next){case 0:_features=_instance.default.getFeatures();features=this.props.filter?_features.filter(this.props.filter):_features;this.setState({collection:{type:'FeatureCollection',features:features},syncKey:new Date().getTime()});case 3:case"end":return _context.stop();}}},null,this,null,Promise);}},{key:"render",value:function render(){return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_maps.default.ShapeSource,{id:"main",key:"geojson-source",shape:this.state.collection,maxZoomLevel:24,onPress:this.onPress,__self:this,__source:{fileName:_jsxFileName,lineNumber:92,columnNumber:7}},this.getLayers()),this.props.children);}}]);return GeoJSONSource;}(_react.default.Component);exports.GeoJSONSource=GeoJSONSource;var _default=GeoJSONSource;exports.default=_default;
//# sourceMappingURL=geojson_source.js.map